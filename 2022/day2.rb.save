require 'httparty'                                                                                         
require 'pry'                                                                                              
                                                                                                           
def calculatePoints(chooses)
  # my choose is the second char
  gamePoints = case chooses.chars.sort.join
    when "AZ", "BX", "CY"
      0
    when "AX", "BY", "CZ"
      3
    when "AY", "BZ", "CX"
      6
  end
  choosePoints = case chooses.chars.sort.last
    when "X"
      1
    when "Y"
      2
    when "Z"
      3
  end
  points = gamePoints+choosePoints
  puts "for chooses #{chooses.chars.sort.join} #{gamePoints}+#{choosePoints}=#{points}"
  points                                                                                               
end                                                                                                        

def calculateLine(str)
  suggestion = str.chars.last.to_sym
  choose = case suggestion
    when :X
     {"X":"Z", "Y":"X", "Z":"Y"}[suggestion]
    when :Y
     {"X":"X", "Y":"Y", "Z":"Z"}[suggestion]
    when :Z
     {"X":"Y", "Y":"Z", "Z":"X"}[suggestion]
  end
  #binding.pry
  line= "#{str.chars.first} #{choose}"
  puts "#{str} > #{line}"
  line
end
                                                                                                        
lines = File.open("input2.txt").read.split("\n")                                 
results = lines.map{|line| calculatePoints(line.gsub(" ", ""))}                                                
puts "part1: #{results.inject{|sum, r| sum+=r}}"                                                                                 
results = lines.map do |line|
  opponent_choose, elf_suggestion = line.split(" ") 
  line = calculateLine(line)
  #binding.pry
  puts "opponent choose #{opponent_choose}, elf suggests to #{elf_suggestion}, my choose is: #{line.chars.last}"
  calculatePoints(line.gsub(" ", ""))
end  
puts "part2: #{results.inject{|sum, r| sum+=r}}"                                                              
